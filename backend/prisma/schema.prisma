// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id
  name              String
  email             String             @unique
  image             String
  isInterviewer     Boolean?
  interviewerInfo   InterviewerMeta?
  createdAt         DateTime           @default(now())
  interviewRequests InterviewRequest[] @relation(name: "UserInterviewRequests")
  interviewsTaken   InterviewRequest[] @relation(name: "InterviewerInterviewRequests")
}

model InterviewerMeta {
  id     String   @id @default(uuid())
  skills String[]
  count  Int      @default(0)
  userId String   @unique
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model InterviewRequest {
  id            String   @id @default(uuid())
  userId        String
  skill         String[]
  interviewerId String? // NULL initially, gets filled when accepted
  status        String   @default("pending") // "pending", "accepted"
  createdAt     DateTime @default(now())

  user        User  @relation(fields: [userId], references: [id], name: "UserInterviewRequests", onDelete: Cascade)
  interviewer User? @relation(fields: [interviewerId], references: [id], name: "InterviewerInterviewRequests", onDelete: Cascade)
}
